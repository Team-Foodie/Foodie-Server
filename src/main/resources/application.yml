spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: ${DB_URL:jdbc:postgresql://foodie-develop.csbvgeckdsn4.ap-northeast-2.rds.amazonaws.com:5432/foodie}
    username: ${DB_USER:foodie}
    password: ${DB_PWD:vnel1234}

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: update

  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE

  devtools:
    livereload:
      enabled: true

cloud:
  aws:
    region:
      static: ap-northeast-2
    #      static: ${AWS_S3_REGION:ap-northeast-2}
    stack:
      auto: false
    credentials:
      access-key: AKIA2KACCX6VYCAWQDY6
      secret-key: 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
#      access-key: ${AWS_S3_ACCESS:s3_access}
#      secret-key: ${AWS_S3_SECRET:s3_secret}

aws:
  s3:
    url: https://s3.console.aws.amazon.com/s3/buckets/foodiekurly
    bucket: foodie
    foodie-folder: foodie
#    url: ${AWS_S3_URL}
#    bucket: ${AWS_S3_BUCKET}
#    foodie-folder: ${AWS_S3_FOODIE_FOLDER:foodie/}

# 파일 업로드
# 파일 업로드 기능여부 선택
  servlet:
    multipart:
      enabled: true
  # 업로드된 파일의 임시 저장경로
      location: volumes/ming/git/learnfromcode:\\upload
  # 한번에 최대 업로드 가능 용량
      max-request-size: 30MB
  # 파일 하나의 최대 크기
      max-file-size: 10MB

  #  업로드된 파일 저장
com:
  example:
    upload:
      path: /Volumes/ming/git/LearnFromCode\upload

logging:
  level:
    com:
      amazonaws:
        util:
          EC2MetadataUtils: error
